// /******************************************************************************
//  * File: QCHTSDKUnityEmulator.cs
//  * Copyright (c) 2023 Qualcomm Technologies, Inc. and/or its subsidiaries. All rights reserved.
//  *
//  * Confidential and Proprietary - Qualcomm Technologies, Inc.
//  *
//  ******************************************************************************/

using System;
using UnityEngine;
using QCHT.Core.Extensions;
using QCHT.Interactions.Extensions;
using UnityEngine.InputSystem;

namespace QCHT.Core
{
    [Obsolete("This item is now obsolete and will be removed in future release, please consider updating your project. More information: https://docs.spaces.qualcomm.com/unity/setup/SetupGuideUnity.html",false)]
    public sealed class QCHTSDKUnityEmulator : QCHTIHandInputHandler
    {
        private const float ScrollSpeed = 0.1f;
        private const float StartZPosition = 0.4f;

        #region Nested class

        private sealed class TweakHandData
        {
            public Quaternion RotationOffset = Quaternion.identity;
            public float ZPosition = StartZPosition;
            public Matrix4x4 HandMatrix = Matrix4x4.identity;
        }

        #endregion

        private static bool s_isPinchMode;
        private static bool s_isGrabMode;
        private static bool s_isFlipMode;

        private bool _isLeftHandControl;
        private bool _isRightHandControl;

        private TweakHandData _leftTweakData = new TweakHandData();
        private TweakHandData _rightTweakData = new TweakHandData();

        private float[] _leftHandData = Array.Empty<float>();
        private float[] _rightHandData = Array.Empty<float>();

        private const int DataPadding = 2;
        private const int DataSize = DataPadding + 2 * 167;
        private static readonly float[] s_buffer = new float[DataSize];

        private float _mouseScroll;
        private Vector2 _mousePosition;

        public void UpdateData(QCHTData data)
        {
#if ENABLE_LEGACY_INPUT_MANAGER && !ENABLE_INPUT_SYSTEM
            // Left hand control
            if (Input.GetKey(KeyCode.B) && Input.GetMouseButtonDown(0))
            {
                _isLeftHandControl = true;
                _isRightHandControl = false;
            }
            // Right hand control
            else if (Input.GetKey(KeyCode.N) && Input.GetMouseButtonDown(0))
            {
                _isRightHandControl = true;
                _isLeftHandControl = false;
            }
            // Release both hands
            else if (Input.GetKeyDown(KeyCode.Space))
            {
                _isLeftHandControl = false;
                _isRightHandControl = false;
            }
            else if (Input.GetKeyDown(KeyCode.P))
            {
                s_isPinchMode = !s_isPinchMode;
            }
            else if (Input.GetKeyDown(KeyCode.G))
            {
                s_isGrabMode = !s_isGrabMode;
            }
            else if (Input.GetKeyDown(KeyCode.F))
            {
                s_isFlipMode = !s_isFlipMode;
            }
            else if (Input.GetKeyDown(KeyCode.C))
            {
                _rightHandData = Array.Empty<float>();
                _leftHandData = Array.Empty<float>();
                _isLeftHandControl = false;
                _isRightHandControl = false;
            }
#endif
            
            _leftHandData = GetHandData(true);
            _rightHandData = GetHandData(false);
            
            if (_isLeftHandControl)
            {
                UpdateTweakHandData(ref _leftTweakData);
            }
            else if (_isRightHandControl)
            {
                UpdateTweakHandData(ref _rightTweakData);
            }

            // Concat raw data and apply offset corrections
            UpdateHandData(_leftHandData, _rightHandData);
            
            data.Update(s_buffer, s_buffer.Length);

            if (Cursor.lockState == CursorLockMode.Locked)
                return;
            
            if (data.GetHand(true) is var leftHand && leftHand.IsDetected)
                ApplyTweakMatrixToHand(leftHand, _leftTweakData.HandMatrix);

            if (data.GetHand(false) is var rightHand && rightHand.IsDetected)
                ApplyTweakMatrixToHand(rightHand, _rightTweakData.HandMatrix);
        }

        #region Hand Input Handler

        public void OnLeftHandInsert(InputAction.CallbackContext context)
        {
            _isLeftHandControl = true;
            _isRightHandControl = false;
        }

        public void OnRightHandInsert(InputAction.CallbackContext context)
        {
            _isRightHandControl = true;
            _isLeftHandControl = false;
        }

        public void OnHandsRemove(InputAction.CallbackContext context)
        {
            _rightHandData = Array.Empty<float>();
            _leftHandData = Array.Empty<float>();
            _isLeftHandControl = false;
            _isRightHandControl = false;
        }

        public void OnHandsReleased(InputAction.CallbackContext context)
        {
            _isLeftHandControl = false;
            _isRightHandControl = false;
        }

        public void OnPinch(InputAction.CallbackContext context)
        {
            s_isPinchMode = !s_isPinchMode;
        }

        public void OnGrab(InputAction.CallbackContext context)
        {
            s_isGrabMode = !s_isGrabMode;
        }

        public void OnFlip(InputAction.CallbackContext context)
        {
            s_isFlipMode = !s_isFlipMode;
        }

        public void OnMousePosition(InputAction.CallbackContext context)
        {
            _mousePosition = context.ReadValue<Vector2>();
        }

        public void OnMouseScroll(InputAction.CallbackContext context)
        {
            _mouseScroll = context.ReadValue<Vector2>().y / 100f;
        }

        #endregion

        private void UpdateTweakHandData(ref TweakHandData handData)
        {
#if ENABLE_LEGACY_INPUT_MANAGER && !ENABLE_INPUT_SYSTEM
            _mouseScroll = Input.mouseScrollDelta.y;
#endif

            handData.ZPosition += _mouseScroll * ScrollSpeed;
            handData.HandMatrix = Matrix4x4.TRS(GetMousePositionOffset(handData.ZPosition), handData.RotationOffset,
                Vector3.one);
            _mouseScroll = 0;
        }

        private Vector3 GetMousePositionOffset(float zPosition)
        {
            var camera = Camera.main;
            
            if (!camera)
                return Vector3.zero;

#if ENABLE_LEGACY_INPUT_MANAGER && !ENABLE_INPUT_SYSTEM
            _mousePosition = Input.mousePosition;
#endif
            var viewPortMousePosition = camera.ScreenToViewportPoint(_mousePosition);
            viewPortMousePosition.x -= 0.5f;
            viewPortMousePosition.y -= 0.5f;
            var frustumHeight = 2.0f * zPosition * Mathf.Tan(camera.fieldOfView * 0.5f * Mathf.Deg2Rad);
            var frustumWidth = frustumHeight * camera.aspect;
            return new Vector3(viewPortMousePosition.x * frustumWidth, viewPortMousePosition.y * frustumHeight,
                zPosition);
        }

        private static void ApplyTweakMatrixToHand(QCHTHand hand, Matrix4x4 offsetMatrix)
        {
            var pr = hand.GetPalmRotation();

            for (var i = 0; i < hand.points.Length; i++)
            {
                var localPoint = Quaternion.Inverse(pr) * hand.points[i];
                localPoint = pr * offsetMatrix.GetRotation() * localPoint;
                hand.points[i] = localPoint + offsetMatrix.GetPosition();
            }
        }

        private static void UpdateHandData(float[] leftHand, float[] rightHand)
        {
            var handCount = 0;

            if (leftHand.Length > 2)
                handCount++;

            if (rightHand.Length > 2)
                handCount++;

            s_buffer[0] = 1f; // Sdk detection state 
            s_buffer[1] = handCount; // Hand count

            Array.Copy(rightHand, 0, s_buffer, DataPadding, rightHand.Length);
            Array.Copy(leftHand, 0, s_buffer, rightHand.Length + DataPadding, leftHand.Length);
        }

        private static float[] GetHandData(bool isLeft)
        {
            if (s_isPinchMode)
            {
                return isLeft ? s_getFakeLeftPinch : s_getFakeRightPinch;
            }

            if (s_isGrabMode)
            {
                return isLeft ? s_getFakeLeftGrab : s_getFakeRightGrab;
            }

            if (s_isFlipMode)
            {
                return isLeft ? s_getFakeLeftGrabFlip : s_getFakeRightFlipOpen;
            }

            return isLeft ? s_getFakeLeftOpen : s_getFakeRightOpen;
        }

        #region Right hand raw data

        private static readonly float[] s_getFakeRightOpen =
        {
            //Detection state, hand count, hand id, hand isLeft, Points, rotations, gesture...
            7295469f, 0f, -0.05579985f, -0.02843007f, 0.01673377f, -0.08265194f, -0.005791917f, 0.03817099f,
            -0.1046196f, 0.01278712f, 0.05573082f, -0.03515647f, 0.03477846f, 0.006377488f, -0.04566178f,
            0.06638005f, 0.01428923f, -0.05263153f, 0.08744146f, 0.02211988f, -0.05939966f, 0.1079886f, 0.03230119f,
            -0.008248702f, 0.0408299f, 0.005303293f, -0.01552648f, 0.07866568f, 0.01517612f, -0.02049498f,
            0.1045078f, 0.02201027f, -0.02518153f, 0.1288946f, 0.02854753f, 0.01569973f, 0.03855748f, 0.004311711f,
            0.01552137f, 0.07239713f, 0.009968251f, 0.01548341f, 0.09820071f, 0.01627448f, 0.01549395f, 0.1216842f,
            0.0229311f, 0.03707926f, 0.02829558f, 0.002280205f, 0.04717024f, 0.05322032f, 0.01095474f, 0.05404973f,
            0.07007455f, 0.01731625f, 0.0619189f, 0.08919575f, 0.02510428f, 0f, 0f, 0f, 0.04476174f, -0.0406808f,
            -0.007789761f, -0.02175098f, -0.06089678f, -0.008668453f, 0.01150538f, -0.05078879f, -0.008229107f,
            -0.1942361f, 0.6954941f, 0.3462431f, 0.5988957f, 0.07145284f, 0f, 0.09006035f, 0.9933698f,
            0.0006686054f, 0f, 1.249603E-06f, 0.9999998f, 0.002733204f, -0.0003901535f, 0.1413128f, 0.9899611f,
            0.04247494f, 0f, -0.08751221f, 0.9952575f, 0.05301507f, 0f, 1.230721E-05f, 0.9985937f, 0.05026125f, 0f,
            1.271393E-05f, 0.9987361f, 1.114651E-09f, -5.844923E-18f, 5.243725E-09f, 1f, 0.05477986f, 0f,
            -0.009727057f, 0.9984511f, 0.001628621f, 0f, -4.121726E-09f, 0.9999987f, 0.001664817f, 0f,
            6.107799E-07f, 0.9999986f, 0.002965277f, 0.0003822548f, -0.1278518f, 0.9917887f, 0.0126385f, 0f,
            0.0263272f, 0.9995735f, 0.03707362f, 0f, 6.095638E-06f, 0.9993125f, 0.01828041f, 0f, 4.216826E-06f,
            0.9998329f, 0.006343761f, 0.001687317f, -0.257038f, 0.966379f, 0.0970289f, 0f, -0.02557501f, 0.9949529f,
            0.01214339f, 0f, 2.941529E-06f, 0.9999263f, 0.01208928f, 0f, 3.749296E-06f, 0.9999269f, 0.005877593f,
            -3.107289E-05f, 0.005286505f, 0.9999688f, 0.07197042f, 0.06592587f, -0.6722379f, 0.7338734f, 0.7276616f,
            -0.6680354f, -0.1052861f, -0.1146835f, 0.07109076f, 0.02150965f, 0.05403078f, 0.9957731f, 0f, 0f, 1f,
            -1f
        };

        private static readonly float[] s_getFakeRightGrab =
        {
            7.295891E+08f, 0f, -0.03786225f, -0.02789023f, 0.01872677f, -0.02622942f, -0.01020119f,
            0.05189925f, -0.001000047f, 0.00983423f, 0.05078274f, -0.03468195f, 0.0290373f, 0.014328f, -0.03680239f,
            0.01792163f, 0.04504627f, -0.0266907f, -0.001198515f, 0.03884667f, -0.01875543f, -0.00829643f,
            0.01860964f, -0.01218702f, 0.03392714f, 0.01785064f, -0.01502591f, 0.01770599f, 0.05214125f,
            -0.007757723f, -0.005098887f, 0.04197979f, -0.002354868f, -0.00868281f, 0.01829165f, 0.008611389f,
            0.03244415f, 0.01965588f, 0.005680069f, 0.01900153f, 0.04944563f, 0.007450782f, -0.004172407f,
            0.03918725f, 0.01008381f, -0.007599272f, 0.01624644f, 0.02850865f, 0.02492832f, 0.01791912f,
            0.02684589f, 0.0146064f, 0.04283708f, 0.02345701f, -0.0020677f, 0.03572178f, 0.02278018f, -0.003915004f,
            0.01468182f, 0f, 0f, 0f, 0.0438827f, -0.03954025f, -0.005884409f, -0.01606546f, -0.04946894f,
            -0.03286561f, 0.01390862f, -0.0445046f, -0.01937503f, 0.0262269f, 0.8293124f, 0.2913693f, 0.4760851f,
            0.2923007f, 0f, 0.2734228f, 0.9164062f, 0.5091536f, 0f, -0.0001423659f, 0.8606757f, 0.003847831f,
            -0.0004819478f, 0.1242798f, 0.9922397f, 0.6695122f, 0f, -0.04615134f, 0.7413659f, 0.7067941f, 0f,
            7.600528E-05f, 0.7074192f, 0.4101374f, 0f, 1.020788E-05f, 0.9120238f, 6.716279E-09f, 2.325521E-17f,
            -3.462513E-09f, 1f, 0.7007737f, 0f, -0.004038229f, 0.7133722f, 0.7068048f, 0f, 7.498883E-06f,
            0.7074087f, 0.4656212f, 0f, 2.02094E-05f, 0.8849841f, 0.004184969f, 0.0004876608f, -0.1157426f,
            0.9932703f, 0.6907468f, 0f, 0.009769234f, 0.7230307f, 0.7067957f, 0f, -2.808528E-05f, 0.7074177f,
            0.4803197f, 0f, 2.070345E-05f, 0.8770935f, 0.006792538f, 0.001653515f, -0.2365181f, 0.971602f,
            0.6777045f, 0f, 0.003948018f, 0.7353238f, 0.7067912f, 0f, -1.715127E-06f, 0.7074222f, 0.5152436f, 0f,
            2.291233E-05f, 0.8570437f, -0.01804144f, -0.000101528f, -0.005626484f, 0.9998214f, 0.5042601f,
            0.4039659f, -0.4771931f, 0.5956677f, -0.5980647f, 0.4658429f, 0.4007509f, 0.5144975f, 0.2270177f,
            -0.05823575f, 0.0850779f, 0.9684179f, 2f, 1f, 1f, -1f
        };

        private static readonly float[] s_getFakeRightPinch =
        {
            7.296359E+08f, 0f, -0.05466475f, -0.0274834f, -0.004496485f, -0.07321651f, -0.01533957f,
            0.02670121f, -0.0691807f, -0.0002092123f, 0.05386376f, -0.02616608f, 0.03684523f, 0.009454101f,
            -0.04306976f, 0.03591844f, 0.03641987f, -0.05281568f, 0.02086192f, 0.04895848f, -0.05970601f,
            0.000882946f, 0.05588591f, -0.00820221f, 0.03235064f, 0.02044913f, -0.02888913f, 0.05156461f,
            0.04435921f, -0.0437526f, 0.06320196f, 0.06118917f, -0.05828717f, 0.07303085f, 0.07739723f,
            0.007173732f, 0.02247533f, 0.02918029f, -0.005633801f, 0.04197682f, 0.05095619f, -0.01695874f,
            0.05498396f, 0.06865013f, -0.02835505f, 0.06522371f, 0.08540654f, 0.01813228f, 0.008732371f,
            0.03317386f, 0.01722817f, 0.02422761f, 0.05438298f, 0.01654562f, 0.03472933f, 0.06890887f, 0.01569389f,
            0.04668421f, 0.0856052f, 0f, 0f, 0f, 0.02981682f, -0.04272031f, -0.003026456f, -0.01687679f,
            -0.04008161f, -0.0476574f, 0.00647001f, -0.04140096f, -0.02534193f,
            0.08750982f, 0.7737857f, 0.4449293f, 0.4423072f, 0.176762f, 0f, 0.0003930841f, 0.9842535f, 0.3186837f,
            0f, 0.0002476733f, 0.9478611f, 0.007736853f, -0.0009178787f, 0.1178074f, 0.9930059f, 0.4985794f, 0f,
            -0.1119485f, 0.8595849f, 0.3593558f, 0f, 9.158059E-05f, 0.9332006f, 0.1809492f, 0f, 8.811807E-05f,
            0.9834924f, 1.936293E-08f, 1.387325E-16f, -7.164848E-09f, 1f, 0.2491601f, 0f, 0.08992933f, 0.964278f,
            0.0341982f, 0f, 0.001549198f, 0.9994138f, 0.02722495f, 0f, 0.001227079f, 0.9996286f, 0.008432752f,
            0.0009754074f, -0.1148987f, 0.9933409f, 0.1787592f, 0f, 0.1326933f, 0.9749039f, 0.05368718f, 0f,
            0.002621588f, 0.9985543f, 0.04486241f, 0f, 0.002177771f, 0.9989908f, 0.02981286f, 0.006604439f,
            -0.2161854f, 0.9758747f, 0.09105538f, 0f, 0.05146084f, 0.9945153f, 0.003088162f, 0f, 1.520204E-07f,
            0.9999952f, 0.002847089f, 0f, 1.775727E-05f, 0.9999959f, -0.01682416f, -0.000203534f, -0.01209513f,
            0.9997853f, 0.009254714f, 0.007493455f, -0.629232f, 0.7771264f, 0.7695966f, -0.6227002f, -0.08887903f,
            -0.1098458f, 0.3045676f, -0.3111698f, -0.05006689f, 0.8988355f, 7f, 1f, 1f, -1f
        };

        private static readonly float[] s_getFakeCatchRightPinch =
        {
            7.296359E+08f, 0f, -0.05531195f, -0.0147108f, -0.01053905f, -0.08405254f, -0.007375926f,
            0.01399246f, -0.1075754f, -0.001359046f, 0.03410918f, -0.02338407f, 0.04046186f, 0.001535326f,
            -0.03860594f, 0.06465767f, 0.01596248f, -0.05359422f, 0.06950387f, 0.03133184f, -0.06899476f,
            0.06827684f, 0.04750508f, -0.002987407f, 0.03666794f, 0.01398191f, -0.004371375f, 0.06898121f,
            0.03237587f, -0.007665537f, 0.08929275f, 0.04732484f, -0.0129021f, 0.1064003f, 0.06335503f, 0.01468766f,
            0.02403967f, 0.02761525f, 0.01996231f, 0.04860292f, 0.04758906f, 0.01954719f, 0.06405327f, 0.06704628f,
            0.01686966f, 0.07593269f, 0.08636165f, 0.03067335f, -0.001005948f, 0.03890604f, 0.04159659f,
            0.01121397f, 0.05964172f, 0.04644325f, 0.01733673f, 0.0759033f, 0.04970372f, 0.02233391f, 0.09569269f,
            0f, 0f, 0f, 0.03072952f, -0.05236749f, -0.002983809f, -0.01935551f, -0.03533022f, -0.04077828f,
            0.005686998f, -0.04384886f, -0.02188104f, 0.03761454f, 0.7210472f, 0.3985263f, 0.5655553f, 0.01904669f,
            0f, 0.1656339f, 0.9860034f, 0.0004873938f, 0f, 2.942383E-05f, 0.9999999f, 0.01597453f, -0.002115844f,
            0.1312873f, 0.9912134f, 0.1537486f, 0f, -0.006600034f, 0.988088f, 0.3124066f, 0f, 5.912867E-05f,
            0.9499485f, 0.1381376f, 0f, 1.677323E-05f, 0.9904131f, 1.475021E-08f, 2.423669E-16f, -1.643142E-08f, 1f,
            0.02366498f, 0f, -0.05439995f, 0.9982387f, 0.07437538f, 0f, 9.66649E-06f, 0.9972304f, 0.07353234f, 0f,
            1.336965E-05f, 0.9972929f, 0.01753513f, 0.002572654f, -0.1451375f, 0.9892527f, 0.006589439f, 0f,
            -0.03913531f, 0.9992122f, 0.1407184f, 0f, 2.143834E-05f, 0.9900497f, 0.07805878f, 0f, 1.283945E-05f,
            0.9969488f, 0.07442889f, 0.02555335f, -0.3237139f, 0.9428768f, 0.0004967132f, 0f, -0.06305631f,
            0.9980099f, 0.111458f, 0f, 1.987423E-05f, 0.9937691f, 0.07901372f, 0f, 1.390585E-05f, 0.9968736f,
            0.01877522f, 0.0001310131f, -0.006976582f, 0.9997994f, 0.7307414f, 0.6768818f, 0.06020115f,
            -0.06499136f, -0.153203f, 0.1401508f, 0.6602674f, 0.7217574f, 0.2540432f, -0.3221219f, -0.08722258f,
            0.907795f, 7f, 1f, 1f, -1f
        };

        private static readonly float[] s_getFakeMiCatchRightPinch =
        {
            7.296359E+08f, 0f, -0.04789247f, -0.004943639f, -0.02995589f, -0.077299f, 0.003973007f,
            -0.007164687f, -0.101316f, 0.01130782f, 0.01158541f, -0.0229848f, 0.04117308f, -0.01806873f,
            -0.0491113f, 0.05920275f, -0.01578423f, -0.0700902f, 0.06224518f, -0.0103879f, -0.09142867f,
            0.06499204f, -0.004790723f, -0.007197527f, 0.03556947f, 0.01474601f, -0.02571031f, 0.06466035f,
            0.02811193f, -0.03848919f, 0.08444596f, 0.03729257f, -0.0506739f, 0.1030397f, 0.0460037f, 0.00600563f,
            0.02276269f, 0.03217083f, -0.003062896f, 0.04856841f, 0.04858702f, -0.01429379f, 0.06567218f,
            0.06241909f, -0.02530768f, 0.08079793f, 0.0752632f, 0.01760559f, 0.004037172f, 0.04235047f, 0.01739483f,
            0.02136535f, 0.06209505f, 0.01420602f, 0.03177791f, 0.07633898f, 0.0104419f, 0.04364906f, 0.09267792f,
            0f, 0f, 0f, 0.0251887f, -0.05401742f, 0.007852077f, -0.0134491f, -0.03644359f, -0.04074925f,
            0.005869798f, -0.04523051f, -0.01644859f, -0.03539736f, 0.768151f, 0.3442209f, 0.5387049f, 0.112143f,
            0f, 0.313967f, 0.9427877f, 0.001794038f, 0f, -8.911361E-06f, 0.9999984f, -0.005750244f, 0.001197474f,
            0.2038702f, 0.9789803f, 0.3165735f, 0f, 0.08790883f, 0.9444857f, 0.2410233f, 0f, 4.926698E-05f,
            0.9705193f, 0.008177799f, 0f, 9.521378E-07f, 0.9999666f, 1.584411E-08f, 4.202737E-17f, -2.652554E-09f,
            1f, 0.1872367f, 0f, 0.06332078f, 0.9802719f, 0.003266379f, 0f, 9.100891E-07f, 0.9999946f, 0.003229646f,
            0f, 1.409874E-05f, 0.9999948f, -0.006069412f, -0.0008904809f, -0.1451594f, 0.9893892f, 0.1243525f, 0f,
            0.09085105f, 0.9880701f, 0.105681f, 0f, 1.761163E-05f, 0.9944001f, 0.0202938f, 0f, 2.548182E-06f,
            0.9997941f, -0.0137911f, -0.004131791f, -0.2869652f, 0.9578328f, 0.07747429f, 0f, 0.04324922f,
            0.9960558f, 0.09604102f, 0f, 9.462912E-06f, 0.9953774f, 0.003083331f, 0f, 3.551622E-06f, 0.9999952f,
            -0.02523636f, 7.218398E-05f, 0.002859395f, 0.9996774f, 0.6176369f, 0.5000601f, 0.3819629f, -0.471772f,
            0.2841845f, -0.250742f, 0.6122533f, 0.6939117f, 0.2043691f, -0.5042043f, -0.07765685f, 0.8354524f, 7f,
            1f, 1f, -1f
        };

        private static readonly float[] s_getFakeRightFlipOpen =
        {
            7.296908E+08f, 0f, 0.05218532f, 0.02036618f, -0.02206776f, 0.05911039f, 0.0580946f, -0.0252839f,
            0.06478316f, 0.0890004f, -0.02791843f, 0.01320046f, 0.04504295f, 0.01357612f, 0.007605486f, 0.07555111f,
            0.02153322f, 0.003307674f, 0.09698308f, 0.02410021f, -0.001117785f, 0.1187981f, 0.02629486f,
            -0.009815507f, 0.03536363f, 0.01489291f, -0.02779315f, 0.06572717f, 0.02669838f, -0.04024513f,
            0.08676328f, 0.03372422f, -0.05212589f, 0.1068387f, 0.0394626f, -0.02627819f, 0.02203353f, 0.0134187f,
            -0.04804666f, 0.04306751f, 0.02409181f, -0.0652452f, 0.06003439f, 0.02991012f, -0.08113007f,
            0.07583335f, 0.03432354f, -0.03840515f, 0.003637329f, 0.008657962f, -0.05789685f, 0.02097638f,
            0.01291201f, -0.07122008f, 0.03292264f, 0.01519707f, -0.08649029f, 0.04672274f, 0.01710376f, 0f, 0f, 0f,
            -0.01072947f, -0.05106308f, -0.01317513f, 0.05147203f, -0.03297503f, -0.01897496f, 0.02037128f,
            -0.04201905f, -0.01607504f, -0.133158f, 0.7266603f, 0.3048563f, 0.6010793f, -0.000527396f, 0f,
            0.03499425f, 0.9993874f, 0f, 0f, 0f, 1f, 0.0009063096f, -0.0001251326f, 0.1367707f, 0.9906023f,
            0.04564611f, 0f, -0.04190661f, 0.9980783f, 0.06755f, 0f, -6.997993E-06f, 0.9977159f, 0.009376398f, 0f,
            -1.251536E-06f, 0.999956f, -3.377452E-09f, -8.833891E-18f, -2.615549E-09f, 1f, 0.02044948f, 0f,
            -0.07615174f, 0.9968866f, 0.02149061f, 0f, -2.94151E-06f, 0.9997691f, 0.01933341f, 0f, -2.73054E-06f,
            0.9998131f, 0.0009823404f, 0.0001190414f, -0.1203013f, 0.9927369f, 0.004739123f, 0f, -0.08170369f,
            0.9966454f, 0.05154288f, 0f, -5.006974E-06f, 0.9986708f, 0.02100674f, 0f, -2.733439E-06f, 0.9997793f,
            0.007535154f, 0.001956331f, -0.2512882f, 0.967881f, 0.08460385f, 0f, 0.02247477f, 0.9961612f,
            0.01742743f, 0f, -2.335692E-06f, 0.9998481f, 0.01742401f, 0f, -1.530502E-06f, 0.9998482f, 0.01281119f,
            0.000472578f, -0.0368598f, 0.9992383f, -0.03067286f, -0.02732765f, -0.6646571f, 0.7460184f, 0.7457632f,
            -0.665236f, -0.02398508f, -0.02688849f, -0.2350752f, 0.9553972f, 0.1719338f, -0.04893352f, 1f, 1f, 1f,
            1f
        };

        private static readonly float[] s_getFakeGrabRightFlip =
        {
            7.297229E+08f, 0f, 0.04753192f, 0.01683456f, -0.01270151f, 0.02048734f, 0.0500297f,
            -0.02965322f, -0.01707632f, 0.04810522f, -0.02676943f, 0.008920263f, 0.04371095f, 0.0334439f,
            0.0167239f, 0.06560053f, 0.002989382f, 0.0214192f, 0.0439994f, -0.01131496f, 0.02047205f, 0.01802575f,
            -0.004950553f, -0.01451897f, 0.03842451f, 0.02315328f, -0.002484016f, 0.06183608f, -0.0127438f,
            0.007552657f, 0.03635083f, -0.02599782f, 0.006247588f, 0.01054839f, -0.01340842f, -0.0321207f,
            0.02928116f, 0.0103873f, -0.02149022f, 0.04934038f, -0.02058169f, -0.006035917f, 0.0259342f,
            -0.03043661f, -0.004815593f, 0.002375908f, -0.01666063f, -0.04493856f, 0.01414544f, -0.004096329f,
            -0.03681697f, 0.03059859f, -0.02985054f, -0.02155186f, 0.01602227f, -0.03435487f, -0.01871426f,
            -0.003299847f, -0.01918572f, 0f, 0f, 0f, -0.0108608f, -0.05174735f, -0.04606918f, 0.05287459f,
            -0.04812047f, -0.001637906f, 0.0210069f, -0.04993391f, -0.02385354f, 0.02868247f, 0.8471867f,
            0.2848627f, 0.4475546f, 0.2765872f, 0f, 0.2903976f, 0.9160616f, 0.4896703f, 0f, 0.01688391f, 0.8717442f,
            0.003565045f, -0.0004275479f, 0.1190738f, 0.9928789f, 0.6844822f, 0f, -0.04322826f, 0.7277468f,
            0.7073057f, 0f, 0.0004069901f, 0.7069077f, 0.4118237f, 0f, 8.595239E-05f, 0.9112636f, 1.280652E-08f,
            2.612521E-17f, -2.039993E-09f, 1f, 0.7070268f, 0f, 0.001310626f, 0.7071856f, 0.7071262f, 0f,
            0.001305681f, 0.7070862f, 0.4763571f, 0f, 0.001465682f, 0.8792507f, 0.003878974f, 0.0004344153f,
            -0.1112957f, 0.9937797f, 0.7066514f, 0f, 0.005381758f, 0.7075413f, 0.7070961f, 0f, 0.005155152f,
            0.7070987f, 0.4821541f, 0f, 0.003826735f, 0.8760781f, 0.006169578f, 0.001458111f, -0.229998f,
            0.9731705f, 0.701883f, 0f, -0.006177709f, 0.7122655f, 0.7070256f, 0f, 0.000650079f, 0.7071876f,
            0.5094757f, 0f, 0.0001828214f, 0.860485f, 0.02033207f, 0.0003129132f, -0.01538513f, 0.9996749f,
            0.5809561f, 0.4526201f, -0.4157564f, 0.53364f, -0.5242591f, 0.4327495f, 0.4668765f, 0.5656028f,
            -0.1716842f, 0.9355857f, 0.2431586f, 0.1899419f, 2f, 1f, 1f, 1f
        };

        #endregion

        #region Left hand raw data

        private static readonly float[] s_getFakeLeftOpen =
        {
            7.297229E+08f, 1f, 0.05399502f, -0.00994312f, 0.008280396f, 0.07437779f, 0.02238671f, 0.01775342f,
            0.09119893f, 0.04906729f, 0.02557117f, 0.0289942f, 0.03760773f, -0.004672527f, 0.03832437f, 0.06913085f,
            -0.00489676f, 0.0447279f, 0.09076365f, -0.005029976f, 0.05124408f, 0.1127726f, -0.00513196f,
            0.00713478f, 0.03769532f, -0.003806591f, 0.01397014f, 0.07535318f, -0.004781485f, 0.01863215f,
            0.1010092f, -0.005363762f, 0.02304245f, 0.1252516f, -0.00582242f, -0.01077463f, 0.03287581f,
            -0.001831472f, -0.01219568f, 0.06596137f, -0.002292693f, -0.01319058f, 0.09168856f, -0.001032174f,
            -0.01398648f, 0.1148408f, 0.001568258f, -0.02671278f, 0.02295358f, -0.000208199f, -0.03538464f,
            0.04822878f, 0.005564809f, -0.04081728f, 0.06474711f, 0.01193517f, -0.04641603f, 0.08261812f,
            0.02191228f, 0f, 0f, 0f, -0.0349768f, -0.04143836f, 0.004843533f, 0.03454868f, -0.04793844f, 0.001001f,
            -0.0001957417f, -0.04469012f, 0.002921283f, -0.149271f, -0.7251576f, -0.2500491f, 0.6239712f,
            0.03855394f, 0f, -0.08609055f, 0.995541f, 0f, 0f, 0f, 1f, 0.002855385f, 0.0003605395f, -0.1252713f,
            0.9921184f, 0.03896116f, 0f, 0.02792306f, 0.9988505f, 0.0004567381f, 0f, 2.564237E-06f, 0.9999999f,
            0.0007324219f, 0f, 8.311924E-08f, 0.9999997f, -2.188655E-09f, -8.610272E-19f, -3.934046E-10f, 1f,
            0.03016634f, 0f, -0.04379695f, 0.9985849f, 0.001563164f, 0f, -1.754345E-05f, 0.9999987f, 0.001859293f,
            0f, -1.005425E-05f, 0.9999983f, 0.00317567f, -0.0003580933f, 0.1120508f, 0.9936973f, 0.02644724f, 0f,
            -0.0445542f, 0.9986568f, 0.03149034f, 0f, -2.857784E-05f, 0.999504f, 0.03149933f, 0f, -2.300031E-05f,
            0.9995038f, 0.002715711f, -0.0006400913f, 0.2294122f, 0.9733254f, 0.1288925f, 0f, -0.0105726f,
            0.9916022f, 0.0694109f, 0f, 3.250469E-06f, 0.9975882f, 0.06941304f, 0f, 5.134413E-06f, 0.997588f,
            0.005485883f, -0.000233069f, 0.0424463f, 0.9990836f, 0.08550538f, -0.08550533f, 0.7019178f, 0.7019182f,
            0.5006613f, 0.5006604f, 0.4993379f, -0.4993387f, -0.03576784f, 0.03133624f, -0.0001949552f, 0.9988687f,
            0f, 1f, 1f, -1f
        };

        private static readonly float[] s_getFakeLeftGrab =
        {
            7.295891E+08f, 1f, 0.04565161f, -0.01975675f, 0.01549304f, 0.04895696f, 0.01189825f, 0.03867608f,
            0.02733614f, 0.03607989f, 0.04060155f, 0.03395519f, 0.03225417f, 0.001645148f, 0.0398445f, 0.03740307f,
            0.03357661f, 0.02932354f, 0.01810239f, 0.0386554f, 0.02142781f, 0.007263765f, 0.02002621f, 0.01172858f,
            0.03637317f, 0.002441585f, 0.01251304f, 0.03923667f, 0.04061186f, 0.007351726f, 0.01375175f,
            0.04265803f, 0.00546857f, 0.005069807f, 0.01967037f, -0.007737208f, 0.03450739f, 0.00357604f,
            -0.009865988f, 0.03732838f, 0.03650618f, -0.007995162f, 0.01172572f, 0.03884524f, -0.005875815f,
            -0.001053646f, 0.01946437f, -0.02642769f, 0.02686141f, 0.003388762f, -0.02940601f, 0.02919725f,
            0.03046346f, -0.02357446f, 0.01175427f, 0.0326286f, -0.01867849f, 0.001736835f, 0.01457483f, 0f, 0f, 0f,
            -0.04211681f, -0.03503428f, -0.001512885f, 0.02405565f, -0.05245487f, -0.00577873f, -0.009706054f,
            -0.04356675f, -0.003602266f, -0.06057677f, -0.7636915f, -0.289807f, 0.5736878f, 0.2484682f, 0f,
            -0.1710241f, 0.9534224f, 0.4597321f, 0f, 0.0008447814f, 0.8880572f, 0.002832215f, 0.0003705393f,
            -0.1297242f, 0.991546f, 0.5988067f, 0f, 6.243234E-05f, 0.8008935f, 0.7067087f, 0f, 9.54698E-05f,
            0.7075046f, 0.5560264f, 0f, 3.33266E-05f, 0.8311646f, -2.847018E-09f, 1.572581E-17f, 5.523607E-09f, 1f,
            0.6506851f, 0f, 0.04039541f, 0.7582725f, 0.7067251f, 0f, 7.574935E-05f, 0.7074882f, 0.5974286f, 0f,
            3.177469E-05f, 0.8019221f, 0.003151031f, -0.000374536f, 0.11803f, 0.993005f, 0.6387233f, 0f,
            0.07029121f, 0.7662191f, 0.7067678f, 0f, -0.0001361703f, 0.7074456f, 0.5120323f, 0f, 2.249491E-05f,
            0.8589662f, 0.001388764f, -0.0003500362f, 0.2444047f, 0.9696723f, 0.6276423f, 0f, 0.06755028f,
            0.7755656f, 0.7067518f, 0f, -5.036464E-05f, 0.7074616f, 0.539516f, 0f, 3.158653E-05f, 0.8419754f,
            0.00251549f, -5.412311E-05f, 0.02151088f, 0.9997655f, 0.66755f, -0.6675499f, 0.2331889f, 0.2331889f,
            0.6434335f, 0.6434333f, -0.2932464f, 0.2932464f, 0.04328565f, 0.02420822f, -0.08065761f, 0.9955073f, 2f,
            1f, 1f, -1f
        };

        private static readonly float[] s_getFakeLeftPinch =
        {
            7.296359E+08f, 1f, 0.05417175f, -0.01110787f, -0.007929742f, 0.06938176f, 0.02243577f, 0.005994856f,
            0.06614001f, 0.05085673f, 0.02141118f, 0.01619685f, 0.03847188f, -0.0220477f, 0.03321188f, 0.05826275f,
            -0.002057195f, 0.04734601f, 0.05529881f, 0.01527607f, 0.06067146f, 0.04663967f, 0.0318386f,
            0.0005847514f, 0.03807686f, -0.004716635f, 0.01549652f, 0.07328166f, -0.002705336f, 0.02901229f,
            0.09510726f, 0.001907229f, 0.04350727f, 0.114056f, 0.008087575f, -0.01165561f, 0.03213469f, 0.01080275f,
            -0.002922833f, 0.06361177f, 0.01626343f, 0.004526168f, 0.08782082f, 0.02104884f, 0.0118399f, 0.1094279f,
            0.02585167f, -0.01827314f, 0.02133657f, 0.02574599f, -0.02051124f, 0.04530396f, 0.0387044f,
            -0.02092665f, 0.06120038f, 0.04819554f, -0.02013895f, 0.07892863f, 0.05982941f, 0f, 0f, 0f,
            -0.01811618f, -0.04252419f, 0.03077477f, 0.02807796f, -0.04596984f, -0.02125275f, 0.005041525f,
            -0.04425153f, 0.004692793f, -0.08014663f, 0.762502f, 0.4070204f, -0.4964892f, 0.1815545f, 0f,
            -0.02020468f, 0.9831733f, 0.2506714f, 0f, -2.808164E-05f, 0.9680722f, 0.002024636f, 0.0002737554f,
            -0.1339926f, 0.9909803f, 0.5006729f, 0f, 0.158338f, 0.8510321f, 0.3792627f, 0f, 4.488748E-05f,
            0.925289f, 0.1272262f, 0f, 3.063232E-05f, 0.9918737f, 5.151992E-09f, -6.706117E-18f, 1.301655E-09f, 1f,
            0.2220712f, 0f, -0.0893797f, 0.9709252f, 0.09849005f, 0f, -0.003956717f, 0.9951302f, 0.06113427f, 0f,
            -0.002451866f, 0.9981266f, 0.002254273f, -0.0002834195f, 0.1247431f, 0.9921865f, 0.2114801f, 0f,
            -0.1186867f, 0.9701493f, 0.01730473f, 0f, 2.592421E-06f, 0.9998503f, 0.01717161f, 0f, 1.050099E-06f,
            0.9998525f, 0.02992152f, -0.007531544f, 0.2439798f, 0.9692894f, 0.1513844f, 0f, -2.911003E-05f,
            0.988475f, 0.03657426f, 0f, 1.209418E-06f, 0.9993309f, 0.03657223f, 0f, 2.83282E-07f, 0.999331f,
            -0.01940518f, 0.0004393958f, 0.02263316f, 0.9995554f, -0.4262986f, 0.4262978f, 0.5641536f, 0.5641546f,
            0.6002566f, 0.600256f, 0.3737543f, -0.3737547f, -0.03564597f, 0.4140217f, 0.04309512f, 0.9085473f, 7f,
            1f, 1f, -1f
        };

        private static readonly float[] s_getFakeCatchLeftPinch =
        {
            7.296359E+08f, 1f, -0.05531195f, -0.0147108f, -0.01053905f, -0.08405254f, -0.007375926f,
            0.01399246f, -0.1075754f, -0.001359046f, 0.03410918f, -0.02338407f, 0.04046186f, 0.001535326f,
            -0.03860594f, 0.06465767f, 0.01596248f, -0.05359422f, 0.06950387f, 0.03133184f, -0.06899476f,
            0.06827684f, 0.04750508f, -0.002987407f, 0.03666794f, 0.01398191f, -0.004371375f, 0.06898121f,
            0.03237587f, -0.007665537f, 0.08929275f, 0.04732484f, -0.0129021f, 0.1064003f, 0.06335503f, 0.01468766f,
            0.02403967f, 0.02761525f, 0.01996231f, 0.04860292f, 0.04758906f, 0.01954719f, 0.06405327f, 0.06704628f,
            0.01686966f, 0.07593269f, 0.08636165f, 0.03067335f, -0.001005948f, 0.03890604f, 0.04159659f,
            0.01121397f, 0.05964172f, 0.04644325f, 0.01733673f, 0.0759033f, 0.04970372f, 0.02233391f, 0.09569269f,
            0f, 0f, 0f, 0.03072952f, -0.05236749f, -0.002983809f, -0.01935551f, -0.03533022f, -0.04077828f,
            0.005686998f, -0.04384886f, -0.02188104f, 0.03761454f, 0.7210472f, 0.3985263f, 0.5655553f, 0.01904669f,
            0f, 0.1656339f, 0.9860034f, 0.0004873938f, 0f, 2.942383E-05f, 0.9999999f, 0.01597453f, -0.002115844f,
            0.1312873f, 0.9912134f, 0.1537486f, 0f, -0.006600034f, 0.988088f, 0.3124066f, 0f, 5.912867E-05f,
            0.9499485f, 0.1381376f, 0f, 1.677323E-05f, 0.9904131f, 1.475021E-08f, 2.423669E-16f, -1.643142E-08f, 1f,
            0.02366498f, 0f, -0.05439995f, 0.9982387f, 0.07437538f, 0f, 9.66649E-06f, 0.9972304f, 0.07353234f, 0f,
            1.336965E-05f, 0.9972929f, 0.01753513f, 0.002572654f, -0.1451375f, 0.9892527f, 0.006589439f, 0f,
            -0.03913531f, 0.9992122f, 0.1407184f, 0f, 2.143834E-05f, 0.9900497f, 0.07805878f, 0f, 1.283945E-05f,
            0.9969488f, 0.07442889f, 0.02555335f, -0.3237139f, 0.9428768f, 0.0004967132f, 0f, -0.06305631f,
            0.9980099f, 0.111458f, 0f, 1.987423E-05f, 0.9937691f, 0.07901372f, 0f, 1.390585E-05f, 0.9968736f,
            0.01877522f, 0.0001310131f, -0.006976582f, 0.9997994f, 0.7307414f, 0.6768818f, 0.06020115f,
            -0.06499136f, -0.153203f, 0.1401508f, 0.6602674f, 0.7217574f, 0.2540432f, -0.3221219f, -0.08722258f,
            0.907795f, 7f, 1f, 1f, -1f
        };

        private static readonly float[] s_getFakeMiCatchLeftPinch =
        {
            7.296359E+08f, 1f, -0.04789247f, -0.004943639f, -0.02995589f, -0.077299f, 0.003973007f,
            -0.007164687f, -0.101316f, 0.01130782f, 0.01158541f, -0.0229848f, 0.04117308f, -0.01806873f,
            -0.0491113f, 0.05920275f, -0.01578423f, -0.0700902f, 0.06224518f, -0.0103879f, -0.09142867f,
            0.06499204f, -0.004790723f, -0.007197527f, 0.03556947f, 0.01474601f, -0.02571031f, 0.06466035f,
            0.02811193f, -0.03848919f, 0.08444596f, 0.03729257f, -0.0506739f, 0.1030397f, 0.0460037f, 0.00600563f,
            0.02276269f, 0.03217083f, -0.003062896f, 0.04856841f, 0.04858702f, -0.01429379f, 0.06567218f,
            0.06241909f, -0.02530768f, 0.08079793f, 0.0752632f, 0.01760559f, 0.004037172f, 0.04235047f, 0.01739483f,
            0.02136535f, 0.06209505f, 0.01420602f, 0.03177791f, 0.07633898f, 0.0104419f, 0.04364906f, 0.09267792f,
            0f, 0f, 0f, 0.0251887f, -0.05401742f, 0.007852077f, -0.0134491f, -0.03644359f, -0.04074925f,
            0.005869798f, -0.04523051f, -0.01644859f, -0.03539736f, 0.768151f, 0.3442209f, 0.5387049f, 0.112143f,
            0f, 0.313967f, 0.9427877f, 0.001794038f, 0f, -8.911361E-06f, 0.9999984f, -0.005750244f, 0.001197474f,
            0.2038702f, 0.9789803f, 0.3165735f, 0f, 0.08790883f, 0.9444857f, 0.2410233f, 0f, 4.926698E-05f,
            0.9705193f, 0.008177799f, 0f, 9.521378E-07f, 0.9999666f, 1.584411E-08f, 4.202737E-17f, -2.652554E-09f,
            1f, 0.1872367f, 0f, 0.06332078f, 0.9802719f, 0.003266379f, 0f, 9.100891E-07f, 0.9999946f, 0.003229646f,
            0f, 1.409874E-05f, 0.9999948f, -0.006069412f, -0.0008904809f, -0.1451594f, 0.9893892f, 0.1243525f, 0f,
            0.09085105f, 0.9880701f, 0.105681f, 0f, 1.761163E-05f, 0.9944001f, 0.0202938f, 0f, 2.548182E-06f,
            0.9997941f, -0.0137911f, -0.004131791f, -0.2869652f, 0.9578328f, 0.07747429f, 0f, 0.04324922f,
            0.9960558f, 0.09604102f, 0f, 9.462912E-06f, 0.9953774f, 0.003083331f, 0f, 3.551622E-06f, 0.9999952f,
            -0.02523636f, 7.218398E-05f, 0.002859395f, 0.9996774f, 0.6176369f, 0.5000601f, 0.3819629f, -0.471772f,
            0.2841845f, -0.250742f, 0.6122533f, 0.6939117f, 0.2043691f, -0.5042043f, -0.07765685f, 0.8354524f, 7f,
            1f, 1f, -1f
        };

        private static readonly float[] s_getFakeRightLeftOpen =
        {
            7.296908E+08f, 1f, 0.05218532f, 0.02036618f, -0.02206776f, 0.05911039f, 0.0580946f, -0.0252839f,
            0.06478316f, 0.0890004f, -0.02791843f, 0.01320046f, 0.04504295f, 0.01357612f, 0.007605486f, 0.07555111f,
            0.02153322f, 0.003307674f, 0.09698308f, 0.02410021f, -0.001117785f, 0.1187981f, 0.02629486f,
            -0.009815507f, 0.03536363f, 0.01489291f, -0.02779315f, 0.06572717f, 0.02669838f, -0.04024513f,
            0.08676328f, 0.03372422f, -0.05212589f, 0.1068387f, 0.0394626f, -0.02627819f, 0.02203353f, 0.0134187f,
            -0.04804666f, 0.04306751f, 0.02409181f, -0.0652452f, 0.06003439f, 0.02991012f, -0.08113007f,
            0.07583335f, 0.03432354f, -0.03840515f, 0.003637329f, 0.008657962f, -0.05789685f, 0.02097638f,
            0.01291201f, -0.07122008f, 0.03292264f, 0.01519707f, -0.08649029f, 0.04672274f, 0.01710376f, 0f, 0f, 0f,
            -0.01072947f, -0.05106308f, -0.01317513f, 0.05147203f, -0.03297503f, -0.01897496f, 0.02037128f,
            -0.04201905f, -0.01607504f, -0.133158f, 0.7266603f, 0.3048563f, 0.6010793f, -0.000527396f, 0f,
            0.03499425f, 0.9993874f, 0f, 0f, 0f, 1f, 0.0009063096f, -0.0001251326f, 0.1367707f, 0.9906023f,
            0.04564611f, 0f, -0.04190661f, 0.9980783f, 0.06755f, 0f, -6.997993E-06f, 0.9977159f, 0.009376398f, 0f,
            -1.251536E-06f, 0.999956f, -3.377452E-09f, -8.833891E-18f, -2.615549E-09f, 1f, 0.02044948f, 0f,
            -0.07615174f, 0.9968866f, 0.02149061f, 0f, -2.94151E-06f, 0.9997691f, 0.01933341f, 0f, -2.73054E-06f,
            0.9998131f, 0.0009823404f, 0.0001190414f, -0.1203013f, 0.9927369f, 0.004739123f, 0f, -0.08170369f,
            0.9966454f, 0.05154288f, 0f, -5.006974E-06f, 0.9986708f, 0.02100674f, 0f, -2.733439E-06f, 0.9997793f,
            0.007535154f, 0.001956331f, -0.2512882f, 0.967881f, 0.08460385f, 0f, 0.02247477f, 0.9961612f,
            0.01742743f, 0f, -2.335692E-06f, 0.9998481f, 0.01742401f, 0f, -1.530502E-06f, 0.9998482f, 0.01281119f,
            0.000472578f, -0.0368598f, 0.9992383f, -0.03067286f, -0.02732765f, -0.6646571f, 0.7460184f, 0.7457632f,
            -0.665236f, -0.02398508f, -0.02688849f, -0.2350752f, 0.9553972f, 0.1719338f, -0.04893352f, 1f, 1f, 1f,
            -1f
        };

        private static readonly float[] s_getFakeLeftGrabFlip =
        {
            7.297229E+08f, 1f, -0.04922991f, 0.01663192f, 0.0007634759f, -0.05254193f, 0.05535778f, -0.005541682f,
            -0.05527521f, 0.0873168f, -0.01074511f, -0.008624867f, 0.04420339f, 0.01662648f, -0.0005244985f,
            0.07560898f, 0.02200097f, 0.004915409f, 0.09731786f, 0.02485299f, 0.01032073f, 0.1195318f, 0.0268997f,
            0.01233217f, 0.03468409f, 0.01149571f, 0.02316495f, 0.07068175f, 0.01874882f, 0.03046966f, 0.09532678f,
            0.02317297f, 0.03729769f, 0.1187174f, 0.02686208f, 0.02500389f, 0.02338585f, 0.006084085f, 0.04183985f,
            0.05160782f, 0.01020175f, 0.0545059f, 0.07404259f, 0.0110504f, 0.06548963f, 0.09456547f, 0.009788215f,
            0.0331195f, 0.009463459f, 0.001077294f, 0.05401906f, 0.02691802f, -0.001353979f, 0.06762659f,
            0.03900505f, -0.00477308f, 0.08242841f, 0.05301433f, -0.01068115f, 0f, 0f, 0f, 0.01152634f,
            -0.05120939f, -0.01526034f, -0.05192757f, -0.02719891f, -0.0001417398f, -0.02020048f, -0.03920421f,
            -0.007701039f, -0.1231109f, -0.7485487f, -0.2266494f, 0.6108588f, -0.0007984847f, 0f, -0.1412461f,
            0.9899742f, 0f, 0f, 0f, 1f, 0.001999187f, 0.0002734287f, -0.1355081f, 0.9907742f, 0.04824192f, 0f,
            0.06478365f, 0.9967325f, 0.01903906f, 0f, -3.724371E-06f, 0.9998187f, 0.01903749f, 0f, -7.051362E-06f,
            0.9998188f, -3.100784E-09f, 1.962214E-17f, 6.328121E-09f, 1f, 0.03351898f, 0f, -0.05395642f, 0.9979805f,
            0.01028292f, 0f, -1.174467E-05f, 0.9999471f, 0.01029596f, 0f, -5.504046E-06f, 0.999947f, 0.002210213f,
            -0.0002372812f, 0.1067431f, 0.9942842f, 0.03629835f, 0f, -0.03510267f, 0.9987243f, 0.04736674f, 0f,
            -2.221732E-05f, 0.9988775f, 0.04496995f, 0f, -1.495723E-05f, 0.9989883f, 0.0002798209f, -6.030592E-05f,
            0.210679f, 0.9775553f, 0.09361605f, 0f, 0.05200743f, 0.9942491f, 0.05059899f, 0f, -9.831696E-06f,
            0.998719f, 0.05059958f, 0f, -1.150201E-05f, 0.998719f, 0.02262762f, -0.0008156553f, 0.03601426f,
            0.9990947f, 0.454628f, -0.4546273f, 0.5415841f, 0.5415849f, 0.643618f, 0.6436176f, -0.2928413f,
            0.2928415f, 0.2260387f, 0.960857f, 0.131899f, -0.09090063f, 2f, 1f, 1f, 1f
        };

        #endregion
    }
}